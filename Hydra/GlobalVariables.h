#ifndef GLOBALVARIABLES_H
#define GLOBALVARIABLES_H
#include "CodeFiles.h"
__declspec(selectany) std::string a{ characterValue(1) };
__declspec(selectany) std::string b{ characterValue(2) };
__declspec(selectany) std::string c{ characterValue(3) };
__declspec(selectany) std::string d{ characterValue(4) };
__declspec(selectany) std::string e{ characterValue(5) };
__declspec(selectany) std::string f{ characterValue(6) };
__declspec(selectany) std::string g{ characterValue(7) };
__declspec(selectany) std::string h{ characterValue(8) };
__declspec(selectany) std::string i{ characterValue(9) };
__declspec(selectany) std::string j{ characterValue(10) };
__declspec(selectany) std::string k{ characterValue(11) };
__declspec(selectany) std::string l{ characterValue(12) };
__declspec(selectany) std::string m{ characterValue(13) };
__declspec(selectany) std::string n{ characterValue(14) };
__declspec(selectany) std::string o{ characterValue(15) };
__declspec(selectany) std::string p{ characterValue(16) };
__declspec(selectany) std::string q{ characterValue(17) };
__declspec(selectany) std::string r{ characterValue(18) };
__declspec(selectany) std::string s{ characterValue(19) };
__declspec(selectany) std::string t{ characterValue(20) };
__declspec(selectany) std::string u{ characterValue(21) };
__declspec(selectany) std::string v{ characterValue(22) };
__declspec(selectany) std::string w{ characterValue(23) };
__declspec(selectany) std::string x{ characterValue(24) };
__declspec(selectany) std::string y{ characterValue(25) };
__declspec(selectany) std::string z{ characterValue(26) };
__declspec(selectany) std::string exclamation{ characterValue(27) };
__declspec(selectany) std::string forwardSlash{ characterValue(28) };
__declspec(selectany) std::string backSlash{ characterValue(29) };
__declspec(selectany) std::string questionMark{ characterValue(30) };
__declspec(selectany) std::string colon{ characterValue(31) };
__declspec(selectany) std::string semiColon{ characterValue(32) };
__declspec(selectany) std::string period{ characterValue(33) };
__declspec(selectany) std::string comma{ characterValue(34) };
__declspec(selectany) std::string doubleQuote{ characterValue(35) };
__declspec(selectany) std::string singleQuote{ characterValue(36) };
__declspec(selectany) std::string plus{ characterValue(37) };
__declspec(selectany) std::string minus{ characterValue(38) };
__declspec(selectany) std::string equals{ characterValue(39) };
__declspec(selectany) std::string backArrow{ characterValue(40) };
__declspec(selectany) std::string forwardArrow{ characterValue(41) };
__declspec(selectany) std::string initialCurlyBracket{ characterValue(42) };
__declspec(selectany) std::string finalCurlyBracket{ characterValue(43) };
__declspec(selectany) std::string initialBracket{ characterValue(44) };
__declspec(selectany) std::string finalBracket{ characterValue(45) };
__declspec(selectany) std::string initialSquareBracket{ characterValue(46) };
__declspec(selectany) std::string finalSquareBracket{ characterValue(47) };
__declspec(selectany) std::string asterisk{ characterValue(48) };
__declspec(selectany) std::string percent{ characterValue(49) };
__declspec(selectany) std::string numberSign{ characterValue(50) };
__declspec(selectany) std::string atSign{ characterValue(51) };
__declspec(selectany) std::string andSign{ characterValue(52) };
__declspec(selectany) std::string upArrow{ characterValue(53) };
__declspec(selectany) std::string underscore{ characterValue(54) };
__declspec(selectany) std::string space{ characterValue(55) };
__declspec(selectany) std::string zero{ characterValue(56) };
__declspec(selectany) std::string one{ characterValue(57) };
__declspec(selectany) std::string two{ characterValue(58) };
__declspec(selectany) std::string three{ characterValue(59) };
__declspec(selectany) std::string four{ characterValue(60) };
__declspec(selectany) std::string five{ characterValue(61) };
__declspec(selectany) std::string six{ characterValue(62) };
__declspec(selectany) std::string seven{ characterValue(63) };
__declspec(selectany) std::string eight{ characterValue(64) };
__declspec(selectany) std::string nine{ characterValue(65) };
__declspec(selectany) std::string capitalA{ characterValue(66) };
__declspec(selectany) std::string capitalB{ characterValue(67) };
__declspec(selectany) std::string capitalC{ characterValue(68) };
__declspec(selectany) std::string capitalD{ characterValue(69) };
__declspec(selectany) std::string capitalE{ characterValue(70) };
__declspec(selectany) std::string capitalF{ characterValue(71) };
__declspec(selectany) std::string capitalG{ characterValue(72) };
__declspec(selectany) std::string capitalH{ characterValue(73) };
__declspec(selectany) std::string capitalI{ characterValue(74) };
__declspec(selectany) std::string capitalJ{ characterValue(75) };
__declspec(selectany) std::string capitalK{ characterValue(76) };
__declspec(selectany) std::string capitalL{ characterValue(77) };
__declspec(selectany) std::string capitalM{ characterValue(78) };
__declspec(selectany) std::string capitalN{ characterValue(79) };
__declspec(selectany) std::string capitalO{ characterValue(80) };
__declspec(selectany) std::string capitalP{ characterValue(81) };
__declspec(selectany) std::string capitalQ{ characterValue(82) };
__declspec(selectany) std::string capitalR{ characterValue(83) };
__declspec(selectany) std::string capitalS{ characterValue(84) };
__declspec(selectany) std::string capitalT{ characterValue(85) };
__declspec(selectany) std::string capitalU{ characterValue(86) };
__declspec(selectany) std::string capitalV{ characterValue(87) };
__declspec(selectany) std::string capitalW{ characterValue(88) };
__declspec(selectany) std::string capitalX{ characterValue(89) };
__declspec(selectany) std::string capitalY{ characterValue(90) };
__declspec(selectany) std::string capitalZ{ characterValue(91) };
__declspec(selectany) std::string newLine{ characterValue(92) };
__declspec(selectany) std::string tab{ characterValue(93) };
#endif